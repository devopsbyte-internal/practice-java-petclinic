name: Gradle CI - Self Hosted - Sonor io

on:
  workflow_dispatch:
    inputs:
      reason:
        description: 'What are you doing?'
        required: true
        default: 'Manual Gradle CI run'

  push:
    branches:
      - main

# To cancel duplicate same workflow run on same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: self-hosted
    name: Run Tests
    # To segragate working dir for each job run
    defaults:
      run:
        working-directory: repo-${{ github.run_id }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: repo-${{ github.run_id }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Run tests
        run: ./gradlew clean test

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage_reports
          path: repo-${{ github.run_id }}/build/reports/jacoco/test/jacocoTestReport.xml

        # Referencing report folders + github environment variables 
      - name: Validate reports
        run: |
          echo "Workspace: $(pwd)"
          ls -lh build/reports/jacoco/test/
          ls -lh build/jacoco/test.exec || true
          ls $GITHUB_WORKSPACE || true
          ls $GITHUB_WORKSPACE/repo-${GITHUB_RUN_ID} || true

      - name: Cleanup workspace
        if: always()
        run: rm -rf ${{ github.workspace }}/repo-${{ github.run_id }}

  build:
    runs-on: self-hosted
    name: Build Project
    needs: test
    defaults:
      run:
        working-directory: repo-${{ github.run_id }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: repo-${{ github.run_id }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build project
        run: ./gradlew build

      - name: Cleanup workspace
        if: always()
        run: rm -rf ${{ github.workspace }}/repo-${{ github.run_id }}

  scan:
    runs-on: self-hosted
    name: SonarQube Scan
    needs: test
    defaults:
      run:
        working-directory: repo-${{ github.run_id }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: repo-${{ github.run_id }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Download coverage reports
        uses: actions/download-artifact@v4
        with:
          name: coverage_reports
          path: ./repo-${{ github.run_id }}

      - name: Debug downloaded files
        run: |
          echo "PWD: $(pwd)"
          ls -lh jacocoTestReport.xml

      - name: SonarQube Scan
        run: |
          ./gradlew sonarqube \
          -Dsonar.host.url="${{ secrets.SONAR_CLOUD_URL }}" \
          -Dsonar.login="${{ secrets.SONAR_TOKEN }}" \
          -Dsonar.projectKey="${{ secrets.SONAR_PROJECT_KEY }}" \
          -Dsonar.organization="${{ secrets.SONAR_ORGANIZATION }}" \
          -Dsonar.coverage.jacoco.xmlReportPaths=jacocoTestReport.xml

      - name: Cleanup workspace
        if: always()
        run: rm -rf ${{ github.workspace }}/repo-${{ github.run_id }}
