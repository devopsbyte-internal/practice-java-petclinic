name: Gradle CI

on:
  workflow_dispatch:

  push:
    branches:
      - main
  
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Run tests
        run: ./gradlew clean test


      - name: Verify Reports and Coverage
        run: |
          ls -lh build/reports/jacoco/test/jacocoTestReport.xml
          ls -lh build/jacoco/test.exec

      - name: Upload coverage reports for Scan
        uses: actions/upload-artifact@v4
        with:
          name: coverage_reports
          path: |
            build/reports/jacoco/test/jacocoTestReport.xml
            


  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build project
        run: ./gradlew build


  scan:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew


      - name: Download coverage reports
        uses: actions/download-artifact@v4
        with:
            name: coverage_reports

      - name: SonarQube Scan
        run: |
          ./gradlew sonarqube \
          -Dsonar.host.url="${{ secrets.SONAR_CLOUD_URL }}" \
          -Dsonar.login="${{ secrets.SONAR_TOKEN }}" \
          -Dsonar.projectKey="${{ secrets.SONAR_PROJECT_KEY }}" \
          -Dsonar.organization="${{ secrets.SONAR_ORGANIZATION }}"

      # SonarQube Cloud Scan Stage --- Stand Alone CLI Scanner not recommended.
      # - name: SonarQube Scan
      #   uses: SonarSource/sonarcloud-github-action@v2
      #   with:
      #     projectBaseDir: .
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
      #     SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
